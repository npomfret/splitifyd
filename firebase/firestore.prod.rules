rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can access their own user documents
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Groups: Members can read groups they belong to, but writes go through backend
    match /groups/{groupId} {
      allow read: if request.auth != null &&
                     request.auth.uid in resource.data.memberIds;
      allow write: if false; // All writes go through Cloud Functions

      // Group membership subcollection
      match /members/{memberId} {
        allow read: if request.auth != null &&
                       (request.auth.uid == memberId ||
                        request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberIds);
        allow write: if false; // All writes go through Cloud Functions
      }

      // Group comments - simplified to avoid evaluation errors
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow write: if false; // All writes go through Cloud Functions
      }
    }

    // Expenses: Group members can read expenses in their groups
    match /expenses/{expenseId} {
      allow read: if request.auth != null &&
                     request.auth.uid in resource.data.memberIds;
      allow write: if false; // All writes go through Cloud Functions

      // Expense comments - simplified to avoid evaluation errors
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow write: if false; // All writes go through Cloud Functions
      }
    }

    // Settlements: Group members can read settlements in their groups
    match /settlements/{settlementId} {
      allow read: if request.auth != null &&
                     request.auth.uid in resource.data.memberIds;
      allow write: if false; // All writes go through Cloud Functions
    }

    // User notifications: Users can read their own notifications
    match /user-notifications/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // All writes go through Cloud Functions
    }

    // Transaction changes: Users can read changes for groups they're in
    match /transaction-changes/{changeId} {
      allow read: if request.auth != null &&
                     request.auth.uid in resource.data.users;
      allow write: if false; // All writes go through Cloud Functions
    }

    // Policies: All authenticated users can read policies
    match /policies/{policyId} {
      allow read: if request.auth != null;
      allow write: if false; // All writes go through Cloud Functions
    }

    // Group balances: Authenticated users can read (will be restricted by memberIds in data)
    match /group-balances/{groupId} {
      allow read: if request.auth != null;
      allow write: if false; // All writes go through Cloud Functions
    }

    // Default deny rule for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}