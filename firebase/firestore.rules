rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Documents (including groups)
    match /documents/{documentId} {
      // Allow read if:
      // 1. User owns the document OR
      // 2. Document has members array and will be checked server-side
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.userId ||
        resource.data.data.members != null
      );
      
      // Allow write if user owns the document
      // Note: Member updates are handled through API endpoints with proper validation
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Allow create if the user is authenticated and setting themselves as owner
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId &&
        request.resource.data.keys().hasAll(['userId', 'data', 'createdAt', 'updatedAt']);
    }
    
    // Allow users to list documents they own
    // Note: Group membership filtering happens in the API layer
    match /{path=**}/documents/{documentId} {
      allow list: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
  }
}