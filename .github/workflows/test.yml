name: Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'webapp-v2/package-lock.json'
    
    - name: Install dependencies
      run: cd webapp-v2 && npm ci
    
    - name: Run type check
      run: cd webapp-v2 && npm run typecheck
    
    - name: Run unit tests
      run: cd webapp-v2 && npm test run
    
    - name: Run tests with coverage
      run: cd webapp-v2 && npm run test:coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./webapp-v2/coverage
        flags: webapp-v2
        name: webapp-v2-coverage

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: cd e2e-tests && npx playwright install --with-deps
    
    - name: Build applications
      run: npm run build
    
    - name: Run Playwright tests
      run: npm run test:e2e
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: tmp/playwright-report/
        retention-days: 30

  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check coverage threshold
      run: cd webapp-v2 && npm run test:coverage
    
    - name: Build check
      run: cd webapp-v2 && npm run build
    
    - name: Bundle size check
      run: |
        cd webapp-v2
        npm run build
        # Check that main bundle is under 200KB
        bundle_size=$(stat -c%s "dist/assets/"*.js | head -1)
        if [ "$bundle_size" -gt 204800 ]; then
          echo "Bundle size $bundle_size exceeds 200KB limit"
          exit 1
        fi
        echo "Bundle size: $bundle_size bytes (under 200KB limit)"